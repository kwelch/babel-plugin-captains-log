// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`all.js 1`] = `
"console.log(a);
console.log(a.length);
console.log(a.map());

function add() {
  console.log(\\"1\\");
}

const subtract = () => {
  console.log(\\"2\\");
};

let multiply;
multiple = () => {
  console.log(\\"3\\");
};

let divide;
divide = function() {
  console.log(\\"4\\");
};

const power = function pow() {
  console.log(5);
};

const obj = {
  method1: function() {
    console.log(6);
  },
  method2: () => {
    console.log(7);
  },
  method3() {
    console.log(8);
  },
};

const Component = () => {
  const privateMethod = () => {
    console.log(1);
  };
  return class {
    showList() {
      arr.map(i => {
        console.log(i);
      });
    }
    render() {
      console.log(2);
    }
  };
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
console.log(\\"all.js(1:0)\\", \\"a\\", a);
console.log(\\"all.js(2:0)\\", a.length);
console.log(\\"all.js(3:0)\\", a.map());

function add() {
  console.log(\\"all.js(6:2)\\", \\"add:\\", \\"1\\");
}

const subtract = () => {
  console.log(\\"all.js(10:2)\\", \\"subtract:\\", \\"2\\");
};

let multiply;
multiple = () => {
  console.log(\\"all.js(15:2)\\", \\"multiple:\\", \\"3\\");
};

let divide;
divide = function () {
  console.log(\\"all.js(20:2)\\", \\"divide:\\", \\"4\\");
};

const power = function pow() {
  console.log(\\"all.js(24:2)\\", \\"power:\\", 5);
};

const obj = {
  method1: function () {
    console.log(\\"all.js(29:4)\\", \\"method1:\\", 6);
  },
  method2: () => {
    console.log(\\"all.js(32:4)\\", \\"method2:\\", 7);
  },
  method3() {
    console.log(\\"all.js(35:4)\\", \\"method3:\\", 8);
  }
};

const Component = () => {
  const privateMethod = () => {
    console.log(\\"all.js(41:4)\\", \\"Component.privateMethod:\\", 1);
  };
  return class {
    showList() {
      arr.map(i => {
        console.log(\\"all.js(46:8)\\", \\"i\\", i);
      });
    }
    render() {
      console.log(\\"all.js(50:6)\\", \\"Component.render:\\", 2);
    }
  };
};"
`;

exports[`method.js 1`] = `
"function logAll() {
  console.assert(1 === 1);
  console.clear();
  console.count(\\"count\\");
  console.debug(\\"debug\\");
  console.dir(obj);
  console.error(\\"error\\");
  console.exception(\\"exception\\");
  console.group(\\"group\\");
  console.groupEnd(\\"group\\");
  console.groupCollapsed(\\"groupCollapsed\\");
  console.groupEnd(\\"groupCollapsed\\");
  console.info(\\"info\\");
  console.log(\\"log\\");
  console.profile(\\"profile\\");
  console.profileEnd(\\"profile\\");
  console.table([\\"table\\"]);
  console.time(\\"time\\");
  console.timeEnd(\\"time\\");
  console.trace(\\"trace\\");
  console.warn(\\"warn\\");
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
function logAll() {
  console.assert(1 === 1);
  console.clear();
  console.count(\\"count\\");
  console.debug(\\"method.js(5:2)\\", \\"logAll:\\", \\"debug\\");
  console.dir(obj);
  console.error(\\"method.js(7:2)\\", \\"logAll:\\", \\"error\\");
  console.exception(\\"method.js(8:2)\\", \\"logAll:\\", \\"exception\\");
  console.group(\\"group\\");
  console.groupEnd(\\"group\\");
  console.groupCollapsed(\\"groupCollapsed\\");
  console.groupEnd(\\"groupCollapsed\\");
  console.info(\\"method.js(13:2)\\", \\"logAll:\\", \\"info\\");
  console.log(\\"method.js(14:2)\\", \\"logAll:\\", \\"log\\");
  console.profile(\\"profile\\");
  console.profileEnd(\\"profile\\");
  console.table([\\"table\\"]);
  console.time(\\"time\\");
  console.timeEnd(\\"time\\");
  console.trace(\\"trace\\");
  console.warn(\\"method.js(21:2)\\", \\"logAll:\\", \\"warn\\");
}"
`;

exports[`simple.js 1`] = `
"function add(a, b) {
  console.log(a, b);
  return a + b;
}

const subtract = (a, b) => {
  console.info(a, b);
  return a - b;
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
function add(a, b) {
  console.log(\\"simple.js(2:2)\\", \\"add:\\", \\"a\\", a, \\"b\\", b);
  return a + b;
}

const subtract = (a, b) => {
  console.info(\\"simple.js(7:2)\\", \\"subtract:\\", \\"a\\", a, \\"b\\", b);
  return a - b;
};"
`;
